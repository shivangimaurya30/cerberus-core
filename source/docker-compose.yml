# Cerberus Copyright (C) 2016 Cerberus Testing
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This file is part of Cerberus.
#
# Cerberus is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Cerberus is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Cerberus. If not, see <http://www.gnu.org/licenses/>.
# Cerberus Glassfish MySQL composition.

version: "3"

services:
  # MAVEN BUILD STAGE:
  # build cerberus java project using the specified maven image
  # volumes are shared with the local repository, meaning built artifact can be found in 'target' folder
  maven:
    image: maven:3.6.3-jdk-8-slim
    container_name: cerberus-local-build
    environment:
      - MAVEN_CONFIG=/var/maven/.m2
      - MAVEN_OPTS=-Duser.home=/var/maven
    volumes:
      # share all files from 'source' folder to container
      - ./:/usr/src/app
      # share to the parent directory the INSTALL & LICENSE file
      - ./INSTALL:/usr/src/INSTALL
      - ./LICENSE:/usr/src/LICENSE
      # share the maven cache folder for dependencies
      - ./localdata/maven-cache:/var/maven:rw
    working_dir: /usr/src/app
    command: mvn clean install

  # TOMCAT DEPLOY STAGE:
  # built artifact generated by MAVEN BUILD stage on a Tomcat container
  # Tomcat configuration can found in 'configuration/tomcat' folder
  tomcat:
    # use the Dockerfile from the same directory
    build: .
    container_name: cerberus-local-app
    environment:
      - DATABASE_HOST=database
      - DATABASE_PORT=3306
    ports:
      - "8080:8080"
    volumes:
      - ./localdata/cerberusmedia:/opt/CerberusMedias/
    depends_on:
      - database
    links:
      - database

  # MYSQL DB INSTANCE
  # use the cerberus dedicated image (application user already existing)
  # DB will not be initialized though, it can be done using UI.
  database:
    image: cerberustesting/cerberus-db-mysql:latest
    container_name: cerberus-local-db
    expose:
      - "3306"
    ports:
      - "3306:3306"
    volumes:
      - ./localdata/mysql-db:/var/lib/mysql
